{"version":3,"sources":["webpack://formvue-json/../../../src/components/VProgressCircular/VProgressCircular.ts","webpack://formvue-json/../../../src/components/VProgressCircular/index.ts","webpack://formvue-json/./node_modules/vuetify/src/components/VBtn/VBtn.sass?e88f","webpack://formvue-json/./node_modules/vuetify/src/components/VProgressCircular/VProgressCircular.sass?1e00","webpack://formvue-json/../../../src/components/VSheet/index.ts","webpack://formvue-json/../../../src/components/VBtn/VBtn.ts","webpack://formvue-json/../../../src/components/VBtn/index.ts"],"names":[],"mappings":"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","file":"formvue-json.common.1.js","sourcesContent":["// Styles\nimport './VProgressCircular.sass'\n\n// Directives\nimport intersect from '../../directives/intersect'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeChildren } from 'vue'\n\n/* @vue/component */\nexport default Colorable.extend({\n  name: 'v-progress-circular',\n\n  directives: { intersect },\n\n  props: {\n    button: Boolean,\n    indeterminate: Boolean,\n    rotate: {\n      type: [Number, String],\n      default: 0,\n    },\n    size: {\n      type: [Number, String],\n      default: 32,\n    },\n    width: {\n      type: [Number, String],\n      default: 4,\n    },\n    value: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    radius: 20,\n    isVisible: true,\n  }),\n\n  computed: {\n    calculatedSize (): number {\n      return Number(this.size) + (this.button ? 8 : 0)\n    },\n\n    circumference (): number {\n      return 2 * Math.PI * this.radius\n    },\n\n    classes (): object {\n      return {\n        'v-progress-circular--visible': this.isVisible,\n        'v-progress-circular--indeterminate': this.indeterminate,\n        'v-progress-circular--button': this.button,\n      }\n    },\n\n    normalizedValue (): number {\n      if (this.value < 0) {\n        return 0\n      }\n\n      if (this.value > 100) {\n        return 100\n      }\n\n      return parseFloat(this.value)\n    },\n\n    strokeDashArray (): number {\n      return Math.round(this.circumference * 1000) / 1000\n    },\n\n    strokeDashOffset (): string {\n      return ((100 - this.normalizedValue) / 100) * this.circumference + 'px'\n    },\n\n    strokeWidth (): number {\n      return Number(this.width) / +this.size * this.viewBoxSize * 2\n    },\n\n    styles (): object {\n      return {\n        height: convertToUnit(this.calculatedSize),\n        width: convertToUnit(this.calculatedSize),\n      }\n    },\n\n    svgStyles (): object {\n      return {\n        transform: `rotate(${Number(this.rotate)}deg)`,\n      }\n    },\n\n    viewBoxSize (): number {\n      return this.radius / (1 - Number(this.width) / +this.size)\n    },\n  },\n\n  methods: {\n    genCircle (name: string, offset: string | number): VNode {\n      return this.$createElement('circle', {\n        class: `v-progress-circular__${name}`,\n        attrs: {\n          fill: 'transparent',\n          cx: 2 * this.viewBoxSize,\n          cy: 2 * this.viewBoxSize,\n          r: this.radius,\n          'stroke-width': this.strokeWidth,\n          'stroke-dasharray': this.strokeDashArray,\n          'stroke-dashoffset': offset,\n        },\n      })\n    },\n    genSvg (): VNode {\n      const children = [\n        this.indeterminate || this.genCircle('underlay', 0),\n        this.genCircle('overlay', this.strokeDashOffset),\n      ] as VNodeChildren\n\n      return this.$createElement('svg', {\n        style: this.svgStyles,\n        attrs: {\n          xmlns: 'http://www.w3.org/2000/svg',\n          viewBox: `${this.viewBoxSize} ${this.viewBoxSize} ${2 * this.viewBoxSize} ${2 * this.viewBoxSize}`,\n        },\n      }, children)\n    },\n    genInfo (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-progress-circular__info',\n      }, this.$slots.default)\n    },\n    onObserve (entries: IntersectionObserverEntry[], observer: IntersectionObserver, isIntersecting: boolean) {\n      this.isVisible = isIntersecting\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.setTextColor(this.color, {\n      staticClass: 'v-progress-circular',\n      attrs: {\n        role: 'progressbar',\n        'aria-valuemin': 0,\n        'aria-valuemax': 100,\n        'aria-valuenow': this.indeterminate ? undefined : this.normalizedValue,\n      },\n      class: this.classes,\n      directives: [{\n        name: 'intersect',\n        value: this.onObserve,\n      }],\n      style: this.styles,\n      on: this.$listeners,\n    }), [\n      this.genSvg(),\n      this.genInfo(),\n    ])\n  },\n})\n","import VProgressCircular from './VProgressCircular'\n\nexport { VProgressCircular }\nexport default VProgressCircular\n","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","import VSheet from './VSheet'\n\nexport { VSheet }\nexport default VSheet\n","// Styles\nimport './VBtn.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Components\nimport VProgressCircular from '../VProgressCircular'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Elevatable from '../../mixins/elevatable'\nimport Positionable from '../../mixins/positionable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { breaking } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator, PropType } from 'vue/types/options'\nimport { RippleOptions } from '../../directives/ripple'\n\nconst baseMixins = mixins(\n  VSheet,\n  Routable,\n  Positionable,\n  Sizeable,\n  GroupableFactory('btnToggle'),\n  ToggleableFactory('inputValue')\n  /* @vue/component */\n)\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-btn',\n\n  props: {\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.btnToggle) return ''\n\n        return this.btnToggle.activeClass\n      },\n    } as any as PropValidator<string>,\n    block: Boolean,\n    depressed: Boolean,\n    fab: Boolean,\n    icon: Boolean,\n    loading: Boolean,\n    outlined: Boolean,\n    plain: Boolean,\n    retainFocusOnClick: Boolean,\n    rounded: Boolean,\n    tag: {\n      type: String,\n      default: 'button',\n    },\n    text: Boolean,\n    tile: Boolean,\n    type: {\n      type: String,\n      default: 'button',\n    },\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-btn--active',\n  }),\n\n  computed: {\n    classes (): any {\n      return {\n        'v-btn': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-btn--absolute': this.absolute,\n        'v-btn--block': this.block,\n        'v-btn--bottom': this.bottom,\n        'v-btn--disabled': this.disabled,\n        'v-btn--is-elevated': this.isElevated,\n        'v-btn--fab': this.fab,\n        'v-btn--fixed': this.fixed,\n        'v-btn--has-bg': this.hasBg,\n        'v-btn--icon': this.icon,\n        'v-btn--left': this.left,\n        'v-btn--loading': this.loading,\n        'v-btn--outlined': this.outlined,\n        'v-btn--plain': this.plain,\n        'v-btn--right': this.right,\n        'v-btn--round': this.isRound,\n        'v-btn--rounded': this.rounded,\n        'v-btn--router': this.to,\n        'v-btn--text': this.text,\n        'v-btn--tile': this.tile,\n        'v-btn--top': this.top,\n        ...this.themeClasses,\n        ...this.groupClasses,\n        ...this.elevationClasses,\n        ...this.sizeableClasses,\n      }\n    },\n    computedElevation (): string | number | undefined {\n      if (this.disabled) return undefined\n\n      return Elevatable.options.computed.computedElevation.call(this)\n    },\n    computedRipple (): RippleOptions | boolean {\n      const defaultRipple = this.icon || this.fab ? { circle: true } : true\n      if (this.disabled) return false\n      else return this.ripple ?? defaultRipple\n    },\n    hasBg (): boolean {\n      return !this.text && !this.plain && !this.outlined && !this.icon\n    },\n    isElevated (): boolean {\n      return Boolean(\n        !this.icon &&\n        !this.text &&\n        !this.outlined &&\n        !this.depressed &&\n        !this.disabled &&\n        !this.plain &&\n        (this.elevation == null || Number(this.elevation) > 0)\n      )\n    },\n    isRound (): boolean {\n      return Boolean(\n        this.icon ||\n        this.fab\n      )\n    },\n    styles (): object {\n      return {\n        ...this.measurableStyles,\n      }\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['flat', 'text'],\n      ['outline', 'outlined'],\n      ['round', 'rounded'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      // TODO: Remove this in v3\n      !this.retainFocusOnClick && !this.fab && e.detail && this.$el.blur()\n      this.$emit('click', e)\n\n      this.btnToggle && this.toggle()\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-btn__content',\n      }, this.$slots.default)\n    },\n    genLoader (): VNode {\n      return this.$createElement('span', {\n        class: 'v-btn__loader',\n      }, this.$slots.loader || [this.$createElement(VProgressCircular, {\n        props: {\n          indeterminate: true,\n          size: 23,\n          width: 2,\n        },\n      })])\n    },\n  },\n\n  render (h): VNode {\n    const children = [\n      this.genContent(),\n      this.loading && this.genLoader(),\n    ]\n    const { tag, data } = this.generateRouteLink()\n    const setColor = this.hasBg\n      ? this.setBackgroundColor\n      : this.setTextColor\n\n    if (tag === 'button') {\n      data.attrs!.type = this.type\n      data.attrs!.disabled = this.disabled\n    }\n    data.attrs!.value = ['string', 'number'].includes(typeof this.value)\n      ? this.value\n      : JSON.stringify(this.value)\n\n    return h(tag, this.disabled ? data : setColor(this.color, data), children)\n  },\n})\n","import VBtn from './VBtn'\n\nexport { VBtn }\nexport default VBtn\n"],"sourceRoot":""}