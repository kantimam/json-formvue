{"remainingRequest":"/Users/k.imamov/Desktop/json-formvue/json-formvue/node_modules/thread-loader/dist/cjs.js!/Users/k.imamov/Desktop/json-formvue/json-formvue/node_modules/babel-loader/lib/index.js!/Users/k.imamov/Desktop/json-formvue/json-formvue/src/store/index.js","dependencies":[{"path":"/Users/k.imamov/Desktop/json-formvue/json-formvue/src/store/index.js","mtime":1631895714991},{"path":"/Users/k.imamov/Desktop/json-formvue/json-formvue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/k.imamov/Desktop/json-formvue/json-formvue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/k.imamov/Desktop/json-formvue/json-formvue/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/k.imamov/Desktop/json-formvue/json-formvue/src/store/index.js"],"names":["Vue","Vuex","createCallbackList","use","createStore","initialState","debug","process","env","NODE_ENV","Store","state","initFormStateFromExtendedForm","strict","getters","getCurrentStep","validIndex","currentStep","steps","getIsSingleStep","lastStep","getIsLastStep","getCurrentSchema","_","schema","getCurrentModel","inputModel","getCurrentInputValue","inputKey","model","value","getCurrentInputName","step","formId","mutations","updateInputValue","payload","console","log","currentModel","key","updateFormStep","newStep","setFormResponse","response","formResponse","setFormFinished","formFinished","setFormStep","formConfig","formConfigStep","api","page","current","id","nextStep","nextPage","previousStep","previousPage","pages","createStepFromFormConfig","actions","submitStep","context","vuetifyForm","isFormValid","validate","$el","formData","FormData","append","currentAction","formAction","fetch","method","body","then","status","json","Error","dispatch","catch","error","commit","message","handleSuccessResponse","successJson","redirectUri","window","location","content","callbacks","length","handleSuccessCallbacks","_context","callbackArray","createdCallbackList","Promise","all","configuration","Object","freeze","createModelFromFormConfig","inputArrayFromSchema","elements","formStepError","action","wasSubmitted","Array","isArray","forEach","element","identifier","defaultValue","hasError","errorList","inputs","push"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex'\nimport { createCallbackList } from '../lib/util';\n\n\nVue.use(Vuex)\n\n\n/* look into splitting single step and multie step into different modules and conditionally adding them if needed */\nconst createStore=(initialState)=>{\n  const debug = process.env.NODE_ENV !== 'production'\n\n  return new Vuex.Store({\n    state: initFormStateFromExtendedForm(initialState),\n    strict: debug,\n    \n    getters: {\n      getCurrentStep: state => {\n        const validIndex=state.currentStep? state.currentStep - 1 : 0;\n        return state.steps[validIndex];\n      },\n      getIsSingleStep: state => {\n        return state.lastStep === 1\n      },\n      getIsLastStep: state => {\n        return state.currentStep === state.lastStep\n      },\n      getCurrentSchema: (_, getters) =>{\n        return getters.getCurrentStep.schema\n      },\n      getCurrentModel: (_, getters) =>{\n        return getters.getCurrentStep.inputModel\n      },\n      getCurrentInputValue: (_, getters) => inputKey =>{\n        const model=getters.getCurrentModel;\n        if(!model) return \"\"\n        const inputModel=model[inputKey];\n        if(!inputModel || !inputModel.value) return \"\"\n        return inputModel.value; \n      },\n      getCurrentInputName: (_, getters) => inputKey =>{\n        const step=getters.getCurrentStep;\n        if(!step || !step.formId) return `tx_form_formframework[${inputKey}]`\n        return `tx_form_formframework[${step.formId}][${inputKey}]`\n      }\n    },\n\n    mutations: {\n      updateInputValue (state, payload){\n        console.log(payload)  \n        const validIndex=state.currentStep? state.currentStep - 1 : 0;\n        const currentStep=state.steps[validIndex];\n        if(!currentStep) return console.log(`could not find the step ${state.currentStep} at the index ${validIndex}`);\n        \n        const currentModel=currentStep.inputModel[payload.key];\n        if(!currentModel) return console.log(`the model does not have a field with the key ${payload.key}`);\n        \n        currentModel.value=payload.value;\n        console.log(currentModel)\n      },\n      updateFormStep (state, newStep){\n        state.currentStep=newStep>0? newStep : 1;\n      },\n      setFormResponse (state, response) {\n        state.formResponse=response;\n      },\n      setFormFinished(state){\n        state.formFinished=true;\n      },\n      setFormStep(state, formConfig){\n        const formConfigStep=formConfig.api.page.current>0? formConfig.api.page.current : 1;\n       \n        state.id=formConfig.id\n        state.currentStep=formConfig.api.page.current || 1\n        state.nextStep=formConfig.api.page.nextPage || 1\n        state.previousStep=formConfig.api.page.previousPage || 1\n        state.lastStep=formConfig.api.page.pages || 1\n        state.formResponse=null\n        \n        state.steps[formConfigStep - 1]=createStepFromFormConfig(formConfig)\n        \n      }\n    },\n\n    actions: {\n\n      submitStep(context, vuetifyForm){\n        const isFormValid=vuetifyForm.validate();\n        \n        if(vuetifyForm.$el && isFormValid){ // check if form element exists and if it is valid\n          const formData=new FormData(vuetifyForm.$el); // parse formdata from underlying form element\n          \n          const currentModel=context.getters.getCurrentModel;\n          console.log(currentModel)\n          // append entries to formdata\n          formData.append(context.getters.getCurrentInputName('__currentPage'), currentModel['__currentPage'].value)\n          formData.append('tx_form_formframework[__trustedProperties]', currentModel['__trustedProperties'].value)\n          formData.append(context.getters.getCurrentInputName('__state'), currentModel['__state'].value)\n\n          const currentAction=context.getters.getCurrentStep.formAction;\n          if(!currentAction) return console.log(\"could not find valid action for the current step\")\n\n          fetch(currentAction,{ \n            method: \"POST\",\n            body: formData\n          })\n          .then(response=>{\n              if(response.status===200 || response.status===301) return response.json();\n              throw new Error('invalid status code. Only 200 and 301 allowed');\n            }\n          )\n          .then(json=> context.dispatch('handleSuccessResponse', json))\n          .catch(error=>{ // does not catch handleSuccessResponse errors\n            console.log(error);\n            context.commit(\n              'setFormResponse', \n              `<h1>request failed</h1>\n                <h2>${error.message}</h2>`\n            );\n          })\n\n        }\n      },\n\n\n      async handleSuccessResponse(context, successJson){\n        console.log(successJson);\n        if(!successJson) throw new Error('could not find valid json');\n        \n        // handle redirect on success\n        if(successJson.status===301 && successJson.redirectUri){\n          window.location=successJson.redirectUri;\n          return;\n        } \n\n        // handle replace content with success message\n        if(successJson.status===200 && successJson.content){ \n          if(successJson.callbacks && successJson.callbacks.length){\n            // if the response contains callbacks handle them before proceeding\n            try {\n              await context.dispatch('handleSuccessCallbacks', successJson.callbacks);\n              console.log(\"successfully executed all form callbacks\")\n            } catch (error) {\n              // if a callback fails return early \n              return context.commit(\n                'setFormResponse', \n                `<h1>one of the form callbacks failed, check console for more info</h1>\n                  <h2>${error}</h2>`\n              );\n            }\n          }\n          context.commit('setFormResponse', successJson.content);\n          context.commit('setFormFinished');\n          return;\n        }\n\n        // handle loading next page after finishing callbacks if needed\n        if(successJson.api){\n          if(successJson.api.callbacks && successJson.api.callbacks.length){\n            try {\n              await context.dispatch('handleSuccessCallbacks', successJson.api.callbacks);\n              console.log(\"successfully executed all step callbacks\")\n            } catch (error) {\n              return context.commit(\n                'setFormResponse', \n                `<h1>one of the step callbacks failed, check console for more info</h1>\n                  <h2>${error}</h2>`\n              );\n            }\n          }\n          console.log(\"loading next step\")\n          context.commit('setFormStep', successJson);\n        }\n        \n      },\n\n\n      async handleSuccessCallbacks(_context, callbackArray){\n        const createdCallbackList=createCallbackList(callbackArray);\n        if(!createdCallbackList || !createdCallbackList.length) return;\n\n        return Promise.all(createdCallbackList);\n\n      }\n    }\n\n  })\n}\n\n/* should maybe generate error handlers and finishers once on start instead of in every input component */\n/* try to flatten the data as much as possible. Repeating data is fine */\n\nfunction initFormStateFromExtendedForm(formData){\n  const formConfig=formData.configuration;\n  if(!formConfig) return {}\n  \n  const state={\n    id: formConfig.id,\n    currentStep: formConfig.api.page.current || 1,\n    nextStep: formConfig.api.page.nextPage || 1,\n    previousStep: formConfig.api.page.previousPage || 1,\n    lastStep: formConfig.api.page.pages || 1,\n    formResponse: null,\n    formFinished: false,\n\n\n    steps: [\n      createStepFromFormConfig(formConfig)\n    ]\n  }\n  return state;\n}\n\n\nfunction createStepFromFormConfig(formConfig){\n  console.log(formConfig)\n  return {\n    schema: Object.freeze(formConfig), // the original shape of the form with all the nesting for reconstruction\n    inputModel: createModelFromFormConfig(inputArrayFromSchema(formConfig.elements)),  // actually reactive form state\n    \n    formStepError: null,\n    formId: formConfig.id,\n    formAction: formConfig.action || '',\n    wasSubmitted: false\n  }\n}\n\nfunction createModelFromFormConfig(elements){\n  const model={};\n  if(!elements || !Array.isArray(elements)) return model;\n  \n  elements.forEach(element=>{\n    model[element.identifier]={\n      id: element.identifier,\n      value: element.defaultValue || \"\",\n      hasError: false,\n      errorList: []\n    }\n  })\n  return model;\n}\n\n\n// recursive function that generates a flat array of only inputs from a nested form schema\nfunction inputArrayFromSchema(elements){\n  const inputs=[];\n\n  elements.forEach(element=>{\n    if(element.elements && element.elements.length){\n      inputs.push(...inputArrayFromSchema(element.elements));\n    }\n    else inputs.push(element)\n  })\n\n  return inputs;\n}\n\n\nexport default createStore;\n"]}]}