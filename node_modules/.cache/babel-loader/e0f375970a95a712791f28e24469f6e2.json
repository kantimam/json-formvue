{"remainingRequest":"/Users/k.imamov/Desktop/json-formvue/json-formvue/node_modules/thread-loader/dist/cjs.js!/Users/k.imamov/Desktop/json-formvue/json-formvue/node_modules/babel-loader/lib/index.js!/Users/k.imamov/Desktop/json-formvue/json-formvue/src/lib/util.js","dependencies":[{"path":"/Users/k.imamov/Desktop/json-formvue/json-formvue/src/lib/util.js","mtime":1631895714991},{"path":"/Users/k.imamov/Desktop/json-formvue/json-formvue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/k.imamov/Desktop/json-formvue/json-formvue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/k.imamov/Desktop/json-formvue/json-formvue/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/k.imamov/Desktop/json-formvue/json-formvue/src/lib/util.js"],"names":["createInputName","formName","inputName","isRequired","properties","fluidAdditionalAttributes","required","createValidatorList","validators","errors","length","validatorsMap","validator","id","identifier","validatorArguments","options","errorMessage","validatorFunction","createValidatorByKey","validatorKey","vArgs","knownFunctions","inputValue","validatorRequired","NotEmpty","StringLength","validatorLength","minimum","maximum","Alphanumeric","validatorAlphanumeric","EmailAddress","validatorEmail","Integer","validatorInteger","Float","validatorFloat","Text","NumberRange","validatorNumberRange","RegularExpression","validatorRegex","regularExpression","default","string","invalidMessage","test","emailRegex","isNaN","num","parseFloat","regex","RegExp","error","createCallbackList","callbacks","map","callback","createCallbackByKey","action","arguments","callbackKey","callbackArgs","knownCallbacks","testCallback","Promise","res","rej","setTimeout","Math","random","JSON","stringify","console","log"],"mappings":"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","sourcesContent":["export const createInputName=(formName, inputName)=>`tx_form_formframework[${formName}][${inputName}]`\n\n\nexport const isRequired=(properties)=>!!properties && properties.fluidAdditionalAttributes && properties.fluidAdditionalAttributes.required && properties.fluidAdditionalAttributes.required === 'required';\n\n\n/*\nexport const createValidatorListFromProps=(properties)=>{\n    const fluidAttributes=properties.fluidAdditionalAttributes;\n    if(!fluidAttributes) return {}\n    const validators={};\n\n    for(const attribute in fluidAttributes){\n        const validatorFunction=createSimpleValidatorByKey(attribute, fluidAttributes[attribute])\n        if(validatorFunction) validators[attribute]=validatorFunction;\n    }\n    return validators\n}\n// create a function and wrap it inside the payload\nexport const createSimpleValidatorByKey=(validatorKey, payload)=>{\n    // inject payload and error message into the selected validation function\n    const knownFunctions={\n        required: (inputValue)=>!!inputValue || `this field is required`,\n        minlength: (inputValue)=>inputValue.length>=Number(payload) || `min length is ${payload}`,\n        maxlength: (inputValue)=>inputValue.length<Number(payload) || `max length is ${payload}`,\n        default: null\n    }\n    return knownFunctions[validatorKey] || knownFunctions.default;\n}\n\n */\n\n\nexport const createValidatorList=(validators, errors)=>{\n    if(!validators || !validators.length) return {}\n    const validatorsMap={};\n\n    for(let validator of validators){\n        const id=validator.identifier;\n        const validatorArguments=validator.options;\n        const errorMessage=validator.errorMessage;\n        const validatorFunction=createValidatorByKey(id, validatorArguments, errorMessage)\n        if(validatorFunction) validatorsMap[id]=validatorFunction;\n    }\n    return validatorsMap;\n    \n}\n// create a function and wrap it inside the payload\nexport const createValidatorByKey=(validatorKey, vArgs, errorMessage)=>{\n    // inject payload and error message into the selected validation function\n    const knownFunctions={\n        required: (inputValue)=>validatorRequired(inputValue,  errorMessage || `this field is required`),\n        NotEmpty: (inputValue)=>validatorRequired(inputValue, errorMessage || `this field is required`),\n        StringLength: (inputValue)=>!inputValue.length || validatorLength(inputValue, errorMessage || `input length must be between ${vArgs.minimum} and ${vArgs.maximum}`, vArgs),\n        Alphanumeric: (inputValue)=>!inputValue.length || validatorAlphanumeric(inputValue, errorMessage || `this field must be alphanumeric (different alphabets need to be implemented)`),\n        EmailAddress: (inputValue)=>!inputValue.length || validatorEmail(inputValue, errorMessage || `invalid email`),\n        Integer: (inputValue)=>!inputValue.length || validatorInteger(inputValue, errorMessage || `positive integer required`),\n        Float: (inputValue)=>!inputValue.length || validatorFloat(inputValue, errorMessage || `positive float required`),\n        Text: (inputValue)=>validatorRequired(inputValue, errorMessage || `this field is required`),\n        NumberRange: (inputValue)=>!inputValue.length || validatorNumberRange(inputValue, errorMessage || `number must be between ${vArgs.minimum} and ${vArgs.maximum}`, vArgs),\n        RegularExpression: (inputValue)=>!inputValue.length || validatorRegex(inputValue, errorMessage || `input must match following regular expression ${vArgs.regularExpression}`, vArgs),\n        default: null\n    }\n    return knownFunctions[validatorKey] || knownFunctions.default;\n}\n\n\nexport const validatorRequired=(string, invalidMessage)=>!!string || invalidMessage;\nexport const validatorLength=(string, invalidMessage, vArgs)=>{\n    if(!string.length) return invalidMessage;\n    return (string.length>=vArgs.minimum && string.length<vArgs.maximum) || invalidMessage;\n};\nexport const validatorAlphanumeric=(string, invalidMessage)=>/^[a-z0-9]+$/i.test(string) || invalidMessage\nexport const validatorEmail=(string, invalidMessage)=>{\n    const emailRegex=/(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/\n    return emailRegex.test(string) || invalidMessage\n}\nexport const validatorInteger=(string, invalidMessage)=>/^\\d+$/.test(string) || invalidMessage;\nexport const validatorFloat=(string, invalidMessage)=>/^([1-9]\\d*(\\.|\\,)\\d*|0?(\\.|\\,)\\d*[1-9]\\d*|[1-9]\\d*)$/.test(string) || invalidMessage;\nexport const validatorNumberRange=(string, invalidMessage, vArgs)=>{\n    if(isNaN(string)) return invalidMessage;\n    const num=parseFloat(string);\n    return (num>=vArgs.minimum && num<vArgs.maximum) || invalidMessage;\n}\nexport const validatorRegex=(string, invalidMessage, vArgs)=>{\n    /* when no regex or a invalid regex was provided return true = valid so this does not break the form */\n    if(!vArgs.regularExpression) return true;\n    try {\n        const regex=new RegExp(vArgs.regularExpression);\n        return regex.test(string) || invalidMessage\n    } catch (error) {\n        return true;\n    }\n}\n\n\nexport const createCallbackList=(callbacks)=>{\n    return callbacks.map(callback=>(\n        createCallbackByKey(callback.action, callback.arguments)\n    ))\n}\n\n\nexport const createCallbackByKey=(callbackKey, callbackArgs)=>{\n    // inject payload and error message into the selected validation function\n    const knownCallbacks={\n        default: testCallback(callbackArgs)\n    }\n    return knownCallbacks[callbackKey] || knownCallbacks.default;\n} \n\n\nexport const testCallback=(callbackArgs)=>(\n    new Promise((res, rej)=>{\n        setTimeout(()=>{\n            if(Math.random()<0) return rej(`failed testCallback with the arguments ${JSON.stringify(callbackArgs)}`)\n            \n            console.log(`successfully executed testCallback with the arguments`)\n            console.log(callbackArgs)\n            res(callbackArgs)\n        }, 1200);\n    })\n)"]}]}