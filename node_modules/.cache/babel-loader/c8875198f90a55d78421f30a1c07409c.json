{"remainingRequest":"/Users/k.imamov/Desktop/json-formvue/json-formvue/node_modules/thread-loader/dist/cjs.js!/Users/k.imamov/Desktop/json-formvue/json-formvue/node_modules/babel-loader/lib/index.js!/Users/k.imamov/Desktop/json-formvue/json-formvue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/k.imamov/Desktop/json-formvue/json-formvue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/k.imamov/Desktop/json-formvue/json-formvue/src/components/fields/textarea.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/k.imamov/Desktop/json-formvue/json-formvue/src/components/fields/textarea.vue","mtime":1631895714993},{"path":"/Users/k.imamov/Desktop/json-formvue/json-formvue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/k.imamov/Desktop/json-formvue/json-formvue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/k.imamov/Desktop/json-formvue/json-formvue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/k.imamov/Desktop/json-formvue/json-formvue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/k.imamov/Desktop/json-formvue/json-formvue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmFzc2lnbi5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IGNyZWF0ZVZhbGlkYXRvckxpc3QsIGlzUmVxdWlyZWQgfSBmcm9tICcuLi8uLi9saWIvdXRpbCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiT25UZXh0YXJlYSIsCiAgcHJvcHM6IHsKICAgIGF1dG9jb21wbGV0ZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IG51bGwKICAgIH0sCiAgICBjbGVhcmFibGU6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBjbGVhcmljb246IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgY29sb3I6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgY291bnRlcjogewogICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLAogICAgICBkZWZhdWx0OiBudWxsLAogICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uIHZhbGlkYXRvcih2YWx1ZSkgewogICAgICAgIHJldHVybiAvXlxkKyQvLnRlc3QodmFsdWUpOwogICAgICB9CiAgICB9LAogICAgZGVmYXVsdFZhbHVlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgcmVxdWlyZWQ6IGZhbHNlCiAgICB9LAogICAgZGlzYWJsZWQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBmb2N1c2VkOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgaGlkZWRldGFpbHM6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBpZDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgbmFtZTogewogICAgICB0eXBlOiBTdHJpbmcKICAgIH0sCiAgICBpbnB1dG1vZGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgbGFiZWw6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgb3B0aW9uYWw6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBvcHRpb25hbExhYmVsOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ29wdGlvbmFsJwogICAgfSwKICAgIHBsYWNlaG9sZGVyOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIHByZWZpeDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IG51bGwKICAgIH0sCiAgICBwcm9wZXJ0aWVzOiB7CiAgICAgIHR5cGU6IE9iamVjdCB8IEFycmF5LAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIHJlYWRvbmx5OiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgcmVxdWlyZWRMYWJlbDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdyZXF1aXJlZCcKICAgIH0sCiAgICBydWxlczogewogICAgICB0eXBlOiBbT2JqZWN0LCBBcnJheV0sCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiB7fSB8fCBbXTsKICAgICAgfQogICAgfSwKICAgIHR5cGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAndGV4dCcKICAgIH0sCiAgICB2YWx1ZTogewogICAgICB0eXBlOiBbU3RyaW5nLCBOdW1iZXJdLAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgdmFsaWRhdG9yczogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgcmVxdWlyZWQ6IGZhbHNlCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgcmVxdWlyZWQ6IGZ1bmN0aW9uIHJlcXVpcmVkKCkgewogICAgICByZXR1cm4gaXNSZXF1aXJlZCh0aGlzLnByb3BlcnRpZXMpOwogICAgfSwKICAgIHZhbGlkYXRlRmllbGQ6IGZ1bmN0aW9uIHZhbGlkYXRlRmllbGQoKSB7CiAgICAgIC8vaWYoIXRoaXMucmVxdWlyZWQpIHJldHVybiBbXQogICAgICB2YXIgciA9IHt9OwogICAgICB2YXIgdmFsaWRhdGUgPSBbXTsKICAgICAgdmFyIHByb3BzVmFsaWRhdGlvbk1hcCA9IGNyZWF0ZVZhbGlkYXRvckxpc3QodGhpcy52YWxpZGF0b3JzKTsgLy8gY29tYmluZSBkZWZhdWx0IHZhbGlkYXRpb24gYW5kIGN1c3RvbSB2YWxpZGF0aW9uCgogICAgICByID0gT2JqZWN0LmFzc2lnbihyLCB0aGlzLnJ1bGVzLCBwcm9wc1ZhbGlkYXRpb25NYXApOyAvLyBjcmVhdGUgYXJyYXkgZm9yIHRleHQtZmllbGQgc3ludGF4CgogICAgICBmb3IgKHZhciBrZXkgaW4gcikgewogICAgICAgIHZhbGlkYXRlLnB1c2gocltrZXldKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHZhbGlkYXRlOwogICAgfSwKICAgIGlucHV0VmFsdWU6IHsKICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0Q3VycmVudElucHV0VmFsdWUodGhpcy5pZCkgfHwgIiI7CiAgICAgIH0sCiAgICAgIHNldDogZnVuY3Rpb24gc2V0KHZhbHVlKSB7CiAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCd1cGRhdGVJbnB1dFZhbHVlJywgewogICAgICAgICAga2V5OiB0aGlzLmlkLAogICAgICAgICAgdmFsdWU6IHZhbHVlCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGNoYW5nZTogZnVuY3Rpb24gY2hhbmdlKGUpIHsKICAgICAgdGhpcy4kZW1pdCgiY2hhbmdlIiwgZSk7CiAgICB9LAogICAgaW5wdXQ6IGZ1bmN0aW9uIGlucHV0KGUpIHsKICAgICAgdGhpcy4kZW1pdCgiaW5wdXQiLCBlKTsKICAgIH0sCiAgICBmb2N1czogZnVuY3Rpb24gZm9jdXMoZSkgewogICAgICB0aGlzLiRlbWl0KCJmb2N1cyIsIGUpOwogICAgfSwKICAgIGJsdXI6IGZ1bmN0aW9uIGJsdXIoZSkgewogICAgICB0aGlzLiRlbWl0KCJibHVyIiwgZSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["textarea.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-textarea :autocomplete=\"autocomplete\"\n                @blur=\"blur\"\n                @change=\"change\"\n                :color=\"$vuetify.theme.themes.light.primary\"\n                :counter=\"counter\"\n                :disabled=\"disabled\"\n                filled\n                @focus=\"focus\"\n                :id=\"id\"\n                @input=\"input\"\n                :label=\"label\"\n                :placeholder=\"placeholder\"\n                :readonly=\"readonly\"\n                :ref=\"'ref-' + id\"\n                :required=\"required\"\n                :rules=\"validateField\"\n                :type=\"type\"\n                v-bind:class=\"{'v-text-field--required' : required, 'v-text-field--optional' : optional }\"\n                v-model=\"inputValue\"\n                validate-on-blur\n                :value=\"defaultValue\"\n                :name=\"name\"\n    >\n  </v-textarea>\n</template>\n\n<script>\n  import {createValidatorList, isRequired} from '../../lib/util'\n\n  export default {\n  name: \"OnTextarea\",\n \n  props: {\n    autocomplete: {\n      type: String,\n      default: null\n    },\n    clearable: {\n      type: Boolean,\n      default: false\n    },\n    clearicon: {\n      type: String,\n      default: null\n    },\n    color: {\n      type: String,\n      default: null\n    },\n    counter: {\n      type: [Number, String],\n      default: null,\n      validator: function(value) {\n        return /^\\d+$/.test(value);\n      }\n    },\n    defaultValue: {\n      type: String,\n      required: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    focused: {\n      type: Boolean,\n      default: false\n    },\n    hidedetails: {\n      type: Boolean,\n      default: false\n    },\n    id: {\n      type: String,\n      required: true\n    },\n    name: {\n      type: String,\n    },\n    inputmode: {\n      type: String,\n      default: null\n    },\n    label: {\n      type: String,\n      default: null\n    },\n    optional: {\n      type: Boolean,\n      default: false\n    },\n    optionalLabel: {\n      type: String,\n      default: 'optional'\n    },\n    placeholder: {\n      type: String,\n      default: null\n    },\n    prefix: {\n      type: String,\n      default: null\n    },\n    properties: {\n      type: Object | Array,\n      required: true\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    \n    requiredLabel: {\n      type: String,\n      default: 'required'\n    },\n    rules: {\n      type: [Object, Array],\n      default() {\n        return {} || [];\n      }\n    },\n    type: {\n      type: String,\n      default: 'text'\n    },\n    value: {\n      type: [String, Number],\n      default: null\n    },\n    validators: {\n      type: Array,\n      required: false\n    }\n  },\n\n  computed: {\n    required(){\n      return isRequired(this.properties);\n    },\n    validateField() {\n      //if(!this.required) return []\n      let r = {};\n      const validate = [];\n\n      const propsValidationMap=createValidatorList(this.validators)\n      // combine default validation and custom validation\n      r = Object.assign(r, this.rules, propsValidationMap);\n      // create array for text-field syntax\n\n      for (const key in r) {\n        validate.push(r[key]);\n      }\n\n      return validate;\n    },\n    inputValue: {\n      get(){\n        return this.$store.getters.getCurrentInputValue(this.id) || \"\"\n      },\n      set(value){\n        this.$store.commit('updateInputValue', {key: this.id, value: value})\n      }\n    }\n  },\n  \n\n  methods: {\n    change(e) {\n      this.$emit(\"change\", e);\n    },\n    input(e) {\n      this.$emit(\"input\", e);\n    },\n    focus(e) {\n      this.$emit(\"focus\", e);\n    },\n    blur(e) {\n      this.$emit(\"blur\", e);\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/components/fields"}]}